<?xml version="1.0"?>
<block>
  <name>RFNoC: DDC 1-to-N</name>
  <key>theseus_rfnoc_ddc_1_to_n</key>
  <import>import theseus</import>
  <make>ettus.rfnoc_generic(
    self.device3,
    uhd.stream_args( \# TX Stream Args
        cpu_format="$type",
        otw_format="$otw",
        args="input_rate={},fullscale={}".format($input_rate, $fullscale),
    ),
    uhd.stream_args( \# RX Stream Args
        cpu_format="$type",
        otw_format="$otw",
        args="",
    ),
    "DDC1TON", $block_index, $device_index,
)
self.$(id).set_arg("input_rate", float($input_rate), 0)
for ichan, ion, irate, ifreq  in zip(xrange($num_chans), $enable_chans, $output_rate, $freq):
    if ion:
        self.$(id).set_arg("output_rate", float(irate), ichan)
        self.$(id).set_arg("fullscale", $fullscale, ichan)
        self.$(id).set_arg("freq", ifreq, ichan)
        self.$(id).set_arg("enable", 1, ichan)
    else:
        self.$(id).set_arg("enable", 0, ichan)
</make>
<callback>set_arg("input_rate", float($input_rate))</callback>
<callback>for i, rate in zip(xrange($num_chans), $output_rate):
    self.$(id).set_arg("output_rate", float(rate), i)</callback>
<callback>for i, freq in zip(xrange($num_chans), $freq):
    self.$(id).set_arg("freq", freq, i)</callback>

  <param>
    <name>Num Channels</name>
    <key>num_chans</key>
    <value>1</value>
    <type>int</type>
  </param>

  <param>
    <name>Input Rate</name>
    <key>input_rate</key>
    <value>samp_rate</value>
    <type>real</type>
  </param>
  <param>
    <name>Enable Channels</name>
    <key>enable_chans</key>
    <value>[0]</value>
    <type>int_vector</type>
  </param>
  <param>
    <name>Output Rate List</name>
    <key>output_rate</key>
    <value>[samp_rate]</value>
    <type>real_vector</type>
  </param>
  <param>
    <name>Frequency List</name>
    <key>freq</key>
    <value>[0.0]</value>
    <type>real_vector</type>
  </param>
  <param>
    <name>Full scale</name>
    <key>fullscale</key>
    <value>1.0</value>
    <type>real</type>
    <hide>part</hide>
    <tab>Advanced</tab>
  </param>

  <param>
    <name>Host Data Type</name>
    <key>type</key>
    <type>enum</type>
    <option>
      <name>Complex float32</name>
      <key>fc32</key>
      <opt>type:complex</opt>
    </option>
    <option>
      <name>Complex int16</name>
      <key>sc16</key>
      <opt>type:sc16</opt>
    </option>
  </param>

  <param>
    <name>Device Format</name>
    <key>otw</key>
    <type>enum</type>
    <option>
      <name>Complex int16</name>
      <key>sc16</key>
    </option>
  </param>

  <param>
    <name>Block Select</name>
    <key>block_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($block_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>
  <param>
    <name>Device Select</name>
    <key>device_index</key>
    <value>-1</value>
    <type>int</type>
    <hide>#if int($device_index()) &lt; 0 then 'part' else 'none'#</hide>
    <tab>RFNoC Config</tab>
  </param>

  <param>
    <name>FPGA Module Name</name>
    <key>fpga_module_name</key>
    <value>noc_block_ddc_1_to_n</value>
    <type>string</type>
    <hide>all</hide>
    <tab>RFNoC Config</tab>
  </param>

  <param>
    <name>Force Vector Length</name>
    <key>grvlen</key>
    <value>1</value>
    <type>int</type>
  </param>

  <check>$num_chans == len($enable_chans)</check>
  <check>$num_chans == len($output_rate)</check>
  <check>$num_chans == len($freq)</check>

  <sink>
    <name>in</name>
    <type>$type.type</type>
    <vlen>$grvlen</vlen>
    <domain>rfnoc</domain>
    <nports>1</nports>
  </sink>

  <source>
    <name>out</name>
    <type>$type.type</type>
    <vlen>$grvlen</vlen>
    <domain>rfnoc</domain>
    <nports>$num_chans</nports>
  </source>
</block>
